name: Develop Push Workflow

# Execute Develop Workflow on push to develop
on:
  push:
    branches:
      - develop

jobs:
  ##########################################################
  # Unit Test Job:
  # Install dependencies and execute unit tests
  ##########################################################
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin

      - name: Run tests
        run: ./gradlew lintDevDebug app:testDevDebugUnitTest

  ##########################################################
  # Firebase Deployment Job:
  # - Uses Firebase App Distribution to distribute the app
  #   if the unit tests and so on succeed.
  # See: https://firebase.google.com/docs/app-distribution/android/distribute-gradle
  ##########################################################
  firebase_deployment:
    needs: unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin

      - name: Service account file
        env:
          FILE_ENCRYPTION_PASSWORD: ${{ secrets.FILE_ENCRYPTION_PASSWORD }}
        run: gpg --quiet --batch --yes --decrypt --passphrase=$FILE_ENCRYPTION_PASSWORD --output ./keystores/serviceAccountFirebase.json ./keystores/serviceAccountFirebase.gpg

      - name: Dev Release
        env:
          DEV_KEYSTORE_PASSWORD: ${{ secrets.DEV_KEYSTORE_PASSWORD }}
        run: ./gradlew clean appDistributionUploadDevRelease

      - name: Remove service account files
        run: rm keystores/*.json

      - name: Archive Debug Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Debug APK
          path: ./app/build/outputs
